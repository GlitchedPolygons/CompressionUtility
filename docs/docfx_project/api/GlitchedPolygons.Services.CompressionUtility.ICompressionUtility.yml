### YamlMime:ManagedReference
items:
- uid: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility
  commentId: T:GlitchedPolygons.Services.CompressionUtility.ICompressionUtility
  id: ICompressionUtility
  parent: GlitchedPolygons.Services.CompressionUtility
  children:
  - GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  - GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.String,Encoding)
  - GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  - GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.String,Encoding)
  langs:
  - csharp
  - vb
  name: ICompressionUtility
  nameWithType: ICompressionUtility
  fullName: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility
  type: Interface
  source:
    remote:
      path: src/ICompressionUtility.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: ICompressionUtility
    path: ../../src/ICompressionUtility.cs
    startLine: 8
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nUseful utility interface for quickly and easily compress/decompress data.\n"
  example: []
  syntax:
    content: public interface ICompressionUtility
    content.vb: Public Interface ICompressionUtility
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  commentId: M:GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  id: Compress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  parent: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility
  langs:
  - csharp
  - vb
  name: Compress(Byte[], CompressionSettings)
  nameWithType: ICompressionUtility.Compress(Byte[], CompressionSettings)
  fullName: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.Byte[], GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  type: Method
  source:
    remote:
      path: src/ICompressionUtility.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: Compress
    path: ../../src/ICompressionUtility.cs
    startLine: 16
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nCompresses the specified bytes using the provided <xref href=\"GlitchedPolygons.Services.CompressionUtility.CompressionSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: byte[] Compress(byte[] bytes, CompressionSettings compressionSettings)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: The <code>byte[]</code> array to compress.
    - id: compressionSettings
      type: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
      description: The desired compression settings.
    return:
      type: System.Byte[]
      description: The compressed <code>byte[]</code> array.
    content.vb: Function Compress(bytes As Byte(), compressionSettings As CompressionSettings) As Byte()
  overload: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress*
  nameWithType.vb: ICompressionUtility.Compress(Byte(), CompressionSettings)
  fullName.vb: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.Byte(), GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  name.vb: Compress(Byte(), CompressionSettings)
- uid: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.String,Encoding)
  commentId: M:GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.String,Encoding)
  id: Compress(System.String,Encoding)
  parent: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility
  langs:
  - csharp
  - vb
  name: Compress(String, Encoding)
  nameWithType: ICompressionUtility.Compress(String, Encoding)
  fullName: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress(System.String, Encoding)
  type: Method
  source:
    remote:
      path: src/ICompressionUtility.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: Compress
    path: ../../src/ICompressionUtility.cs
    startLine: 24
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nCompresses the specified <code>string</code>.\n"
  example: []
  syntax:
    content: string Compress(string text, Encoding encoding = null)
    parameters:
    - id: text
      type: System.String
      description: The <code>string</code> to compress.
    - id: encoding
      type: Encoding
      description: The encoding to use. Can be <code>null</code>; UTF8 will be used in that case.
    return:
      type: System.String
      description: The compressed <code>string</code>.
    content.vb: Function Compress(text As String, encoding As Encoding = Nothing) As String
  overload: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress*
- uid: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  commentId: M:GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  id: Decompress(System.Byte[],GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  parent: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility
  langs:
  - csharp
  - vb
  name: Decompress(Byte[], CompressionSettings)
  nameWithType: ICompressionUtility.Decompress(Byte[], CompressionSettings)
  fullName: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.Byte[], GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  type: Method
  source:
    remote:
      path: src/ICompressionUtility.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: Decompress
    path: ../../src/ICompressionUtility.cs
    startLine: 33
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nDecompresses the specified bytes using the\n<xref href=\"GlitchedPolygons.Services.CompressionUtility.CompressionSettings\" data-throw-if-not-resolved=\"false\"></xref> that have been used to originally compress the bytes.\n"
  example: []
  syntax:
    content: byte[] Decompress(byte[] compressedBytes, CompressionSettings compressionSettings)
    parameters:
    - id: compressedBytes
      type: System.Byte[]
      description: The compressed <code>byte[]</code> array that you want to decompress.
    - id: compressionSettings
      type: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
      description: The <xref href="GlitchedPolygons.Services.CompressionUtility.CompressionSettings" data-throw-if-not-resolved="false"></xref> that have been used to compress the bytes.
    return:
      type: System.Byte[]
      description: The decompressed <code>bytes[]</code>.
    content.vb: Function Decompress(compressedBytes As Byte(), compressionSettings As CompressionSettings) As Byte()
  overload: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress*
  nameWithType.vb: ICompressionUtility.Decompress(Byte(), CompressionSettings)
  fullName.vb: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.Byte(), GlitchedPolygons.Services.CompressionUtility.CompressionSettings)
  name.vb: Decompress(Byte(), CompressionSettings)
- uid: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.String,Encoding)
  commentId: M:GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.String,Encoding)
  id: Decompress(System.String,Encoding)
  parent: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility
  langs:
  - csharp
  - vb
  name: Decompress(String, Encoding)
  nameWithType: ICompressionUtility.Decompress(String, Encoding)
  fullName: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress(System.String, Encoding)
  type: Method
  source:
    remote:
      path: src/ICompressionUtility.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: Decompress
    path: ../../src/ICompressionUtility.cs
    startLine: 41
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nDecompresses the specified compressed <code>string</code>.\n"
  example: []
  syntax:
    content: string Decompress(string compressedString, Encoding encoding = null)
    parameters:
    - id: compressedString
      type: System.String
      description: The compressed <code>string</code> to decompress.
    - id: encoding
      type: Encoding
      description: The encoding to use. Can be <code>null</code>; UTF8 will be used in that case.
    return:
      type: System.String
      description: The decompressed <code>string</code>
    content.vb: Function Decompress(compressedString As String, encoding As Encoding = Nothing) As String
  overload: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress*
references:
- uid: GlitchedPolygons.Services.CompressionUtility
  commentId: N:GlitchedPolygons.Services.CompressionUtility
  name: GlitchedPolygons.Services.CompressionUtility
  nameWithType: GlitchedPolygons.Services.CompressionUtility
  fullName: GlitchedPolygons.Services.CompressionUtility
- uid: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  commentId: T:GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  parent: GlitchedPolygons.Services.CompressionUtility
  name: CompressionSettings
  nameWithType: CompressionSettings
  fullName: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
- uid: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress*
  commentId: Overload:GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress
  name: Compress
  nameWithType: ICompressionUtility.Compress
  fullName: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Compress
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Encoding
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress*
  commentId: Overload:GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress
  name: Decompress
  nameWithType: ICompressionUtility.Decompress
  fullName: GlitchedPolygons.Services.CompressionUtility.ICompressionUtility.Decompress
