### YamlMime:ManagedReference
items:
- uid: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  commentId: T:GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  id: CompressionSettings
  parent: GlitchedPolygons.Services.CompressionUtility
  children:
  - GlitchedPolygons.Services.CompressionUtility.CompressionSettings.bufferSize
  - GlitchedPolygons.Services.CompressionUtility.CompressionSettings.compressionLevel
  - GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default
  langs:
  - csharp
  - vb
  name: CompressionSettings
  nameWithType: CompressionSettings
  fullName: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  type: Struct
  source:
    remote:
      path: src/CompressionSettings.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: CompressionSettings
    path: ../../src/CompressionSettings.cs
    startLine: 7
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nThe compression relevant settings (such as buffer size, compression level, etc...).\n"
  example: []
  syntax:
    content: public struct CompressionSettings
    content.vb: Public Structure CompressionSettings
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.bufferSize
  commentId: F:GlitchedPolygons.Services.CompressionUtility.CompressionSettings.bufferSize
  id: bufferSize
  parent: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  langs:
  - csharp
  - vb
  name: bufferSize
  nameWithType: CompressionSettings.bufferSize
  fullName: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.bufferSize
  type: Field
  source:
    remote:
      path: src/CompressionSettings.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: bufferSize
    path: ../../src/CompressionSettings.cs
    startLine: 12
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nThe size of the underlying stream buffer. Default value is <code>65536</code><p> </p>\n"
  example: []
  syntax:
    content: public int bufferSize
    return:
      type: System.Int32
    content.vb: Public bufferSize As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.compressionLevel
  commentId: F:GlitchedPolygons.Services.CompressionUtility.CompressionSettings.compressionLevel
  id: compressionLevel
  parent: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  langs:
  - csharp
  - vb
  name: compressionLevel
  nameWithType: CompressionSettings.compressionLevel
  fullName: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.compressionLevel
  type: Field
  source:
    remote:
      path: src/CompressionSettings.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: compressionLevel
    path: ../../src/CompressionSettings.cs
    startLine: 18
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nChoose the desired compression level.<p> </p>\nThe default value favors speed over maximum efficiency (<xref href=\"System.IO.Compression.CompressionLevel.Fastest\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public CompressionLevel compressionLevel
    return:
      type: System.IO.Compression.CompressionLevel
    content.vb: Public compressionLevel As CompressionLevel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default
  commentId: P:GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default
  id: Default
  parent: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: CompressionSettings.Default
  fullName: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default
  type: Property
  source:
    remote:
      path: src/CompressionSettings.cs
      branch: master
      repo: git@github.com:GlitchedPolygons/CompressionUtility.git
    id: Default
    path: ../../src/CompressionSettings.cs
    startLine: 23
  assemblies:
  - GlitchedPolygons.Services.CompressionUtility
  namespace: GlitchedPolygons.Services.CompressionUtility
  summary: "\nGeneral-purpose default settings for compressing and decompressing all kinds of data. When unsure, use this!\n"
  example: []
  syntax:
    content: public static CompressionSettings Default { get; }
    parameters: []
    return:
      type: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
    content.vb: Public Shared ReadOnly Property Default As CompressionSettings
  overload: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: GlitchedPolygons.Services.CompressionUtility
  commentId: N:GlitchedPolygons.Services.CompressionUtility
  name: GlitchedPolygons.Services.CompressionUtility
  nameWithType: GlitchedPolygons.Services.CompressionUtility
  fullName: GlitchedPolygons.Services.CompressionUtility
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Compression.CompressionLevel.Fastest
  commentId: F:System.IO.Compression.CompressionLevel.Fastest
  isExternal: true
- uid: System.IO.Compression.CompressionLevel
  commentId: T:System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression
  commentId: N:System.IO.Compression
  isExternal: true
  name: System.IO.Compression
  nameWithType: System.IO.Compression
  fullName: System.IO.Compression
- uid: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default*
  commentId: Overload:GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default
  name: Default
  nameWithType: CompressionSettings.Default
  fullName: GlitchedPolygons.Services.CompressionUtility.CompressionSettings.Default
- uid: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  commentId: T:GlitchedPolygons.Services.CompressionUtility.CompressionSettings
  parent: GlitchedPolygons.Services.CompressionUtility
  name: CompressionSettings
  nameWithType: CompressionSettings
  fullName: GlitchedPolygons.Services.CompressionUtility.CompressionSettings
